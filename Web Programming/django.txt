HTTP (HyperText Transfer Protocol) is how messages are transfered back and forth across the internet
transfered from client (user) to server

The client sends a request to the server one type is a get request,
/ says you're looking to a website's homepage and three dots indicates there are information being passed
GET / HTTP/1.1
Host: url
...

in HTTP response 200 means the the request was successful 
HTTP/1.1 200 OK
Content-Type: text/html
...

status code -> Description
200             OK
301             Moved Permanently
403             Forbidden
404             Not Found
500             Internal Server Error

django-admin startproject PROJECT_NAME

manage.py file is used to execute commands on the django project 

to run the project
python manage.py runserver

127.0.0.1 means that it is running on your local computer
8000 is a port number, what type of service is being run
starting development server at http://127.0.0.1:8000/

python manage.py startapp APP_NAME

After making a new app go in settings.py add the app name you made to the INSTALLED_APPS list

To create a route in your webapp go to views.py
def index(request):
    return HttpResponse("Text")

In the app you need to make a urls.py file that will tell the app when to run what functions
you create a list in urls.py called urlpatterns where you store the path information
path("route", function_path, name="urlpattern_name")

to add a function in current directory
from . import file

finally you add the path to the urls.py file in the main app for the project
urlpatterns = [
    path("admin/", admin.site.urls),
    path("APP_NAME/", include("APP_NAME.file_name")),
    path("hello/", include("hello.urls"))
]

the main app urls file contains the list of urls that you can access
added the hello application and telling django to look at urls.py in hello directory to see what additional urls you can get to
in the hello app the urls.py file sets the default route to run views.index

abstracts the route and saves it as a variable called name and that variable gets passed as an argument
path(<str:name>, views.greet, name="greet")

to render an entire html file instead of just a string 
def index(request):
    return render(request, "FILE_PATH", {"VAR": value})

in the html file use double curly braces to put in the value of a varible, given in django templating language

{% for i in l %}
    do something
{% endfor %}

To make a layout file for your html make a html file you are using for that layout
then inside the area you want to edit put {% blockbody %} {% endblock %}
Then when using the layout you start with {% extends "FILE_PATH" %} at the top
{% block body%}
...
{% endblock %}

Using the href to link to the url using it's name in in the urls file
<a href="{% url 'add' %}"> LINK_TEXT </a>